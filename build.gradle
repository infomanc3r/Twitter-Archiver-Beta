plugins {
	id 'java'
	id 'checkstyle'
	id 'jacoco'
	id 'com.github.spotbugs' version '4.7.1'
	id 'com.adarshr.test-logger' version '3.0.0'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'net.ltgt.apt-idea' version "0.15"

	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.twitterarchiver'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// Spring + Boot/Reactor spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// https://mvnrepository.com/artifact/javax.validation/validation-api
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

	// Junit testing
	implementation 'org.junit.jupiter:junit-jupiter:5.7.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

	// Guava
	implementation 'com.google.guava:guava:30.1.1-jre'

	// Mockito
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'

	// Unit
	implementation group: 'javax.measure', name: 'unit-api', version: '1.0'

	// Gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
	implementation group: 'com.google.dagger', name: 'dagger', version: '2.15'

	// Dagger
	implementation "com.google.dagger:dagger:2.27"
	annotationProcessor"com.google.dagger:dagger-compiler:2.27"

	// https://mvnrepository.com/artifact/org.testng/testng
	implementation group: 'org.testng', name: 'testng', version: '6.14.3'

	// AWS Lambda Functions
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
	implementation 'com.amazonaws:aws-java-sdk-s3'
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
	implementation 'com.amazonaws:aws-lambda-java-events:2.2.9'
	runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
	implementation 'com.amazonaws:aws-java-sdk-cloudwatch:1.12.167'

	// DynamoDB
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.122'
	implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.122'

	// Added for using log4j usage
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

	// Twitter Api
	implementation "com.twitter:twitter-api-java-sdk:1.1.4"

}

tasks.named('test') {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('./lib') {
		from configurations.runtimeClasspath
	}
}